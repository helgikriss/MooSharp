@model MooSharp.Models.ViewModels.Teachers.AssignmentDetailsCreateMilestoneViewModel
@using MooSharp.Models.ViewModels
@{
    ViewBag.Title = "AssignmentDetails";
}

<h1> @Model.AssignmentTitle</h1>
<hr />

<h4>@Model.CourseTitle</h4>
<h4>Assignment Description</h4>
<p>@Model.AssignmentDescription</p>
<button type="button" class="btn btn-default" data-toggle="modal" data-target="#addMilestone">Create Milestone</button>
<button type="button" id="delete-assignment" class="btn btn-danger" value="@Model.ID"> Delete Assignment</button>
<br /><br />
<h4>Milestones</h4>
<h5>Total weight of milestones: @Model.TotalWeightOfMilestones/100</h5>


<!--Tab headers-->
<div>
    @if (Model.Milestones.Count > 0) {
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
                <a data-target="@("#" + Model.Milestones[0].ID)" aria-controls="home" role="tab" data-toggle="tab">@("1. " + Model.Milestones[0].Title + " (" + Model.Milestones[0].Weight + "%)")
                &nbsp; <span class="delete" id="@Model.Milestones[0].ID"><i class="fa fa-trash-o fa-2" aria-hidden="true"></i></span></a>
            </li>
            @for (var i = 1; i < Model.Milestones.Count; i++) {
                <li role="presentation">
                    <a data-target="@("#" + Model.Milestones[i].ID)" aria-controls="home" role="tab" data-toggle="tab">@((i + 1) + ". " + Model.Milestones[i].Title + " (" + Model.Milestones[i].Weight + "%)") &nbsp; <span class="delete" id="@Model.Milestones[i].ID"><i class="fa fa-trash-o fa-2" aria-hidden="true"></i></span></a>
                </li>
            }
            <li role="presentation" class="">
                <a data-target="#addMilestone"aria-controls="home" role="tab" data-toggle="modal">+</a></li>
        </ul>
        <!--Tab headers end-->

        <!--Tab content-->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="@Model.Milestones[0].ID">
                <br />
                <p>@Model.Milestones[0].Description</p>
                <ul>
                    <li>Submission stuff</li>
                </ul>
            </div>
            @for (var i = 1; i < Model.Milestones.Count; i++) {
                <div role="tabpanel" class="tab-pane" id="@Model.Milestones[i].ID">
                    <br />
                    <p>@Model.Milestones[i].Description</p>
                    <ul>
                        <li>Submission stuff</li>
                    </ul>
                </div>
            }
        </div>
        <!--Tab content ends-->
    }
    else {
        <p class="text-danger">No milestones exist for this assignment</p>
    }
</div>

<!-- Adding Milestone Modal -->
<div class="modal fade" id="addMilestone" role="dialog">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Milestone for @Model.AssignmentTitle</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateMilestone", "Teachers", FormMethod.Post, new { @class = "form form-horizontal", role = "form", enctype = "multipart/form-data" })) {
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.MilestoneTitle, new { @class = "col-md-2 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.MilestoneTitle, new { @class = "form-control" })
                        </div>
                    </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MilestoneDescription, new { @class = "col-md-2 control-label" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.MilestoneDescription, new { @class = "form-control", @rows = "10" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-9 col-md-offset-2">
                                Total weight of milestones in @Model.AssignmentTitle is @Model.TotalWeightOfMilestones%
                            </div>
                        </div>
                        <div class="form-group">

                            @Html.LabelFor(model => model.Weight, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", @min = "0", @max = "100", @placeholder = "Enter value between 0 and 100" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-9 col-md-offset-2">
                                <label for="inputFile">Input:</label>
                                <input type="file" name="InputFile" id="inputFile" /><br />
                                <label for="outputFile">Expected Output:</label>
                                <input type="file" name="OutputFile" id="outputFile" required/>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.ID, new { @class = "form-control", @type = "hidden" })
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-default" value="Add Milestone" />
                            </div>
                        </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    $(document).ready(function () {
        $("span.delete").click(function () {
            var currentID = (this.id);
            $.post('@Url.Action("DeleteMilestone", "Teachers")', { milestoneID: currentID });
            location.reload();
        });

        $("button#delete-assignment").click(function () {
            var assID = (this.value);
            $.post('@Url.Action("DeleteAssignment", "Teachers")', { assignmentID: assID });
            window.location.href = '@Url.Action("Index", "Teachers")';
        });
    });
</script>